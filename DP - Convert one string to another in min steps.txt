int solve(string s,string t,int x,int y,vector<vector<int>>&dp){
    if(x < 0 and y < 0)
    return 0;
    if(x < 0)
    return y+1;
    if(y < 0)
    return x+1;
    if(dp[x][y] != -1)
    return dp[x][y];
    int ans;
    if(s[x] == t[y]){
        ans = solve(s,t,x-1,y-1,dp);
        dp[x][y] = ans;
        return ans;
    }
    int ans1 = solve(s,t,x-1,y-1,dp);
    int ans2 = solve(s,t,x-1,y,dp);
    int ans3 = solve(s,t,x,y-1,dp);
    ans = min(ans1,min(ans2,ans3));
    if(ans == INT_MAX)
    return INT_MAX;
    ans++;
    dp[x][y] = ans;
    return ans;
}
int editDistance(string s, string t)
{
    int n = s.size(), m = t.size();
    int i = n-1,j = m-1;
    vector<vector<int>>dp(n,vector<int>(m,0));
    for(int x=0;x<n;x++){
        for(int y=0;y<m;y++)
        dp[x][y] = -1;
    }
    return solve(s,t,i,j,dp);
}