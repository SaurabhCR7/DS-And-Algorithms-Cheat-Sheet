#include <bits/stdc++.h>
using namespace std;

int merge(int arr[],int s,int e){
    if(s>=e)
    return 0;
    int mid = (s+e)/2;
    int i=s,j=mid+1,k=s;
    int temp[100000];
    int count = 0;
    while(i<=mid && j<=e){
        if(arr[i] <= arr[j]){
            temp[k++] = arr[i++];
        }
        else{
            temp[k++] = arr[j++];
            count = count + mid - i + 1;
        }
    }
    while(i<=mid)
    temp[k++] = arr[i++];
    while(j<=e)
    temp[k++] = arr[j++];
    for(int x=s;x<=e;x++)
    arr[x] = temp[x];
    return count;
}

int inversion(int arr[],int s,int e){
    if(s>=e)
    return 0;
    int mid = (s+e)/2;
    int x = inversion(arr,s,mid);
    int y = inversion(arr,mid+1,e);
    int z = merge(arr,s,e);
    return x+y+z;
}

int main() {
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    cin>>arr[i];
    cout<<inversion(arr,0,n-1);
    return 0;
}
