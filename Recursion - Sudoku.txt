bool valid(int grid[N][N],int x,int y){
    for(int i=0;i<N;i++){
        if(i != x and grid[x][y] == grid[i][y])
        return false;
        if(i != y and grid[x][y] == grid[x][i])
        return false;
    }
    int r = (x/3)*3,c = (y/3)*3;
    for(int i=r;i<r+3;i++){
        for(int j=c;j<c+3;j++){
            if(i != x and j != y and grid[x][y] == grid[i][j])
            return false;
        }
    }
    return true;
}

bool solve(int grid[N][N],int x,int y)  
{ 
    if(x == N)
    return true;
    if(y == N)
    return solve(grid,x+1,0);
    if(grid[x][y] != 0)
    return solve(grid,x,y+1);
    for(int i=1;i<=9;i++){
        grid[x][y] = i;
        if(valid(grid,x,y)){
            bool ans = solve(grid,x,y);
            if(ans)
            return true;
        }
        grid[x][y] = 0;
    }
    return false;
}