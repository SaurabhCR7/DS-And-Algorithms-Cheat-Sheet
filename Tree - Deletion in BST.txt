class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root)
        return root;
        if(key == root->val){
            if(!root->left and !root->right){       // No child
                delete root;
                return NULL;
            }
            else if(!root->left or !root->right){   // One child
                TreeNode* temp = root->left ? root->left : root->right;
                delete root;
                return temp;
            }
            else{                                   // Two Children
                TreeNode* temp = root->right;
                while(temp->left){
                    temp = temp->left;
                }
                root->val = temp->val;
                root->right = deleteNode(root->right,temp->val);
                return root;
            }
        }
        else if(key < root->val)
        root->left = deleteNode(root->left,key);
        else
        root->right = deleteNode(root->right,key);
        return root;
    }
};