node* del(node* root,int d){
	if(!root)
	return NULL;
	if(root->data == d){
		if(root->left==NULL && root->right == NULL){
			delete root;
			return NULL;
		}
		if(root->left==NULL && root->right != NULL){
			node* temp = root->right;
			delete root;
			return temp;
		}
		if(root->left!=NULL && root->right == NULL){
			node* temp = root;
			temp = temp->left;
			delete root;
			return temp;
		}
        node* replace = root->right;
        while(replace->left != NULL)
        replace = replace->left;
        root->data = replace->data;
        root->right = del(root->right,root->data);
        return root;
	}
    else if(d<root->data){
	    root->left = del(root->left,d);
        return root;
    }
    else{
	    root->right = del(root->right,d);
        return root;
    }
	return root;
}
