class LL{
  public:
  LL* head;
  LL* tail;
};

LL flatten(TreeNode* root){
  LL l;
  if(!root){
    l.head = l.tail = NULL;
    return l;
  }
  else if(!root->left && !root->right){
    l.head = l.tail = root;
    return l;
  }
  else if(root->left && !root->right){
    LL leftLL = flatten(root->left); 
    l.head = leftLL.head;
    leftLL.tail -> right = root;
    l.tail = root;
    return l; 
  }
  else if(!root->left && root->right){
    LL rightLL = flatten(root->right);
    l.tail = rightLL.tail;
    root->right = rightLL.head;
    l.head = root;
    return root;
  }
  LL leftLL = flatten(root->left);
  LL rightLL = flatten(root->right);
  l.head = leftLL.head;
  l.tail = rightLL.tail;

  leftLL.tail->right = root;
  root->right = rightLL.head;
  return l;
}