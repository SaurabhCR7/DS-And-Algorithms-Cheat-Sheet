Node* merge(Node* head1,Node* head2){
    if(!head1)
    return head2;
    if(!head2)
    return head1;
    Node* head = NULL;
    if(head1->data <= head2->data){
        head = head1;
        head->next = merge(head1->next,head2);
    }
    else{
        head = head2;
        head->next = merge(head1,head2->next);
    }
    return head;
}
  
Node* midNode(Node* head){
    if(!head or !head->next)
    return head;
    Node* slow = head;
    Node* fast = head->next;
    while(fast){
        fast = fast->next;
        if(fast){
            slow = slow->next;
            fast = fast->next;
        }
    }
    Node* mid = slow->next;
    slow->next = NULL;
    return mid;
}  
  
Node* mergeSort(Node* head) {
    if(!head or !head->next)
    return head;
    Node* mid = midNode(head);
    head = mergeSort(head);
    mid = mergeSort(mid);
    head = merge(head,mid);
    return head;
}