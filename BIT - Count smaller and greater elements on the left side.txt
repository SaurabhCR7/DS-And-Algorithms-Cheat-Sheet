#include <bits/stdc++.h>
using namespace std;

void convert(vector<int>&arr){        // Converting the array into sorted index as negative numbers can't be used as index
  vector<int>temp = arr;
  sort(temp.begin(),temp.end());
  for(int i=0;i<arr.size();i++)
  arr[i] = lower_bound(temp.begin(),temp.end(),arr[i]) - temp.begin() + 1;
}

void update(vector<int>&bit,int i){
  while(i > 0){
    bit[i]++;
    i -= i&(-i);
  }
}

int sum(vector<int>&bit,int i){
  int sum = 0;

// ---------------------------- //

  while(i <= bit.size()){           // For counting larger numbers on the left side
    sum += bit[i];
    i += i&(-i);
  }

// ---------------------------- //

  while(i > 0){                     // For counting smaller number on the right side
    sum += bit[i];
    i -= i&(-i);
  }

// ---------------------------- //
  return sum;
}

int main() {
  int n;
  cin>>n;
  vector<int>arr(n);
  for(int i=0;i<n;i++){
    cin>>arr[i];
  }
  convert(arr);
  int maxNum = INT_MIN;
  for(int i=0;i<n;i++){
    maxNum = max(maxNum,arr[i]);
  }
  vector<int>bit(maxNum+1);
  for(int i=0;i<maxNum;i++)
  bit[i] = 0;
  for(int i=0;i<n;i++){
    cout<<sum(bit,arr[i])<<" ";       // Count larger numbers on the left side
    cout<<sum(bit,arr[i]-1)<<" ";     // Count smaller numbers on the left side
    update(bit,arr[i]);
  }
  return 0;
}
