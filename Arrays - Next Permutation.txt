/*
1,2,3 → 1,3,2
3,2,1 → 1,2,3
1,1,5 → 1,5,1
1,3,2 -> 2,1,3
*/

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        bool found = false;
        int n = nums.size();
        int it1 = -1, it2 = -1;
        for(int i=n-2;i>=0;i--){
            if(nums[i+1] > nums[i]){                // Finding the first number which is not increasing
                it1 = i;
                found = true;
                break;
            }
        }
        if(!found)
        sort(nums.begin(),nums.end());
        else{
            for(int i=n-1;i>=0;i--){
                if(nums[i] > nums[it1]){
                    it2 = i;
                    break;
                }
            }
            swap(nums[it1],nums[it2]);                  // Making the prefix next maximum
            reverse(nums.begin()+it1+1,nums.end());     // Reversing the increasing sequence to get the sorted sequence
        }
    }
};

