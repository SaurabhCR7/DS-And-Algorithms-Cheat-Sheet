/* 
Given an array nums containing n + 1 integers where each
integer is between 1 and n (inclusive), prove that at least
 one duplicate number must exist. Assume that there is only
 one duplicate number, find the duplicate one.
*/


class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int fast = 0,slow = 0;
        slow = nums[slow];
        fast = nums[nums[fast]];
        while(nums[fast] != nums[slow]){
            slow = nums[slow];
            fast = nums[nums[fast]];
        }
        fast = 0;
        while(nums[fast] != nums[slow]){
            fast = nums[fast];
            slow = nums[slow];
        }
        return nums[fast];
    }
};
