class Solution {
public:
    
    ListNode* reverse(ListNode* head){
        if(!head or !head->next)
        return head;
        ListNode* temp = head;
        ListNode* temp1 = head->next;
        ListNode* newHead = reverse(head->next);
        temp1->next = temp;
        temp->next = NULL;
        return newHead;
    }
    
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head)
        return NULL;
        int count = k;
        ListNode* temp = head;
        ListNode* prev = head;
        while(temp and count){
            prev = temp;
            temp = temp->next;
            count--;
        }
        if(!temp and count > 0)
        return head;
        ListNode* temp1 = reverseKGroup(temp,k);
        prev->next = NULL;
        ListNode* newHead = reverse(head);
        head->next = temp1;
        return newHead;
    }
};
