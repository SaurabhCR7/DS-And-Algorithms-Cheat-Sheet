class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        int n = intervals.size();
        if(n == 0)
        return intervals;
        bool found = true;
        while(found){
            found = false;
            for(int i=0;i<intervals.size()-1;i++){
                if(intervals[i][1] >= intervals[i+1][0]){
                    if(intervals[i][1] > intervals[i+1][1]){
                        intervals[i+1][1] = intervals[i][1];
                        intervals[i+1][0] = intervals[i][0];
                    }
                    else{
                        intervals[i][1] = intervals[i+1][1];
                        intervals[i+1][0] = intervals[i][0];
                    }
                    found = true;
                }
            }
            auto it = unique(intervals.begin(),intervals.end());
            intervals.resize(distance(intervals.begin(),it));
            if(intervals.size() <= 1)
            break;
        }
        auto it = unique(intervals.begin(),intervals.end());
        intervals.resize(distance(intervals.begin(),it));
        return intervals;
    }
};