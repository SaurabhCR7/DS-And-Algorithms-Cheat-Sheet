class comp{
    public:
    int operator() (const pair<int,string>&a, const pair<int,string>&b){
        if(a.first > b.first)
        return false;
        else if(a.first < b.first)
        return true;
        return a.second > b.second;
    }
};
class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string,int>m;
        for(int i=0;i<words.size();i++){
            m[words[i]]++;
        }
        int maxNum = 0;
        vector<string>ans;
        priority_queue<pair<int,string>,vector<pair<int,string>>,comp>pq;
        for(auto i:m){
            pq.push(make_pair(i.second,i.first));
        }
        for(int i=0;i<k;i++){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};