int partition(int arr[],int l,int r){
        if(l == r)
        return l;
        int size = r-l+1;
        int randomPivot = l + (rand()%size);
        swap(arr[randomPivot],arr[r]);
        int pivot = arr[r];
        int i=l-1,j=l;
        while(j<=r){
            if(arr[j] <= pivot){
                i++;
                swap(arr[i],arr[j]);
            }
            j++;
        }
        return i;
    }
    int kthSmallest(int arr[], int l, int r, int k) {
        if(l>r)
        return -1;
        int idx = partition(arr,l,r);
        if(idx+1 == k)
        return arr[idx];
        if(idx+1 > k)
        return kthSmallest(arr,l,idx-1,k);
        return kthSmallest(arr,idx+1,r,k);
    }
